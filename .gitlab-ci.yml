stages:
  - test
  - evaluation

include:
  - template: Security/Secret-Detection.gitlab-ci.yml

docker-test:
  image: docker/compose:latest
  stage: test
  services:
    - docker:dind
  variables:
    TESTNG_FAILED_XML: jar/test-output/testng-failed.xml
  script:
    - docker-compose up -d --build --scale chrome=4
    - docker wait automation-test
    - chmod +x ./script.sh
    - ./script.sh
    - |
      if [[ -f "$TESTNG_FAILED_XML" ]]; then
        echo "Test failures observed as TestNG-Failed file exists."
        exit 1
      else
        echo "All tests passed Successfully."
      fi
  artifacts:
    reports:
      junit:
        - jar/test-output/junitreports/TEST-*.xml
    paths:
      - output.txt
      - jar/test-output/
      - jar/src/test/resources/results/
    when: always
    expire_in: 1 week
  retry:
    max: 1
    when: script_failure
  rules:
    - if: "$CI_COMMIT_BRANCH"
      exists:
        - Dockerfile
        - docker-compose.yml

secret_detection:
  stage: test
  artifacts:
    paths: [ gl-secret-detection-report.json ]
    reports:
      secret_detection: gl-secret-detection-report.json

analyze_secret:
  stage: evaluation
  extends:
    - secret_detection
  needs: ["secret_detection"]
  before_script:
    - apk add --no-cache jq
  script:
    # check if '{ "vulnerabilities": [], ..' is empty in the report file if it exists
    - ls
    - cat gl-secret-detection-report.json
    - |
      if [ -f "gl-secret-detection-report.json" ]; then
        if [ "$(jq ".vulnerabilities | length" gl-secret-detection-report.json)" -gt 0  ]; then
          echo "Vulnerabilities detected. Please analyze the artifact gl-secret-detection-report.json produced by the 'secret-detection' job."
          exit 1
        else
          echo "No secrets found!"
      fi
      else
        echo "Artifact gl-secret-detection-report.json does not exist. The 'secret-detection' job likely didn't create one. Hence, no evaluation can be performed."
      fi